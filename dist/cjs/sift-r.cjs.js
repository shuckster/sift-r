/*
 * sift-r
 * v1.2.1
 * https://github.com/shuckster/sift-r
 * License: MIT
 */
var w=Object.create;var A=Object.defineProperty,E=Object.defineProperties,M=Object.getOwnPropertyDescriptor,T=Object.getOwnPropertyDescriptors,k=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,x=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var P=(t,n,s)=>n in t?A(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s,f=(t,n)=>{for(var s in n||(n={}))d.call(n,s)&&P(t,s,n[s]);if(l)for(var s of l(n))F.call(n,s)&&P(t,s,n[s]);return t},y=(t,n)=>E(t,T(n));var q=(t,n)=>{for(var s in n)A(t,s,{get:n[s],enumerable:!0})},b=(t,n,s,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of k(n))!d.call(t,r)&&r!==s&&A(t,r,{get:()=>n[r],enumerable:!(e=M(n,r))||e.enumerable});return t};var v=(t,n,s)=>(s=t!=null?w(x(t)):{},b(n||!t||!t.__esModule?A(s,"default",{value:t,enumerable:!0}):s,t)),z=t=>b(A({},"__esModule",{value:!0}),t);var Z={};q(Z,{sift:()=>N});module.exports=z(Z);var h=v(require("match-iz"),1);const{match:m,against:p,when:i,otherwise:g}=h,{not:C,allOf:D,firstOf:G,gte:H}=h,{isArray:a,isPojo:u,isFunction:I,isString:J}=h,B=t=>a(t)&&t.every(a)&&t.every(n=>n.length===2),L=t=>u(t)&&B(Object.values(t));function N(t,...n){return m([t,...n])(i([L])(W),i([u,u])(j),i([u,I])(X),i([u,a])(Y),i([B])(Q),i([a,a])(O),i([a,C(a)])(R),i(D(G(a),{length:H(2)}))(U),i([u])(([s])=>[{},s]),i([a])(([s])=>[[],s]),g(([s])=>[void 0,s]))}const O=([t,n])=>t.reduce(([s,e],r,o)=>m(r)(i(n[o])(()=>[[...s,r],e]),g(()=>[s,[...e,r]])),[[],[]]),Q=([t])=>O(t.reduce(([n,s],[e,r])=>[[...n,r],[...s,e]],[[],[]])),R=([t,n])=>O([t,Array.from({length:t.length}).fill(n)]),U=([t,...n])=>{const s=Array.from({length:n.length}).map(()=>[]),e=[];return t.forEach(p(...n.map((o,c)=>i(o)(r(s[c]))),g(r(e)))),[...s,e];function r(o){return c=>o.push(c)}},j=([t,n])=>Object.entries(t).reduce(([s,e],[r,o])=>m(o)(i(n[r])(()=>[y(f({},s),{[r]:o}),e]),g(()=>[s,y(f({},e),{[r]:o})])),[{},{}]),W=([t])=>j(Object.entries(t).reduce(([n,s],[e,[r,o]])=>[y(f({},n),{[e]:o}),y(f({},s),{[e]:r})],[{},{}])),X=([t,n])=>j([t,Object.keys(t).reduce((s,e)=>y(f({},s),{[e]:n}),{})]),Y=([t,n])=>{const s=Array.from({length:n.length}).map(()=>({})),e={};return Object.entries(t).forEach(p(...n.map((o,c)=>i([J,o])(r(s[c]))),g(r(e)))),[...s,e];function r(o){return([c,S])=>Object.assign(o,{[c]:S})}};0&&(module.exports={sift});
