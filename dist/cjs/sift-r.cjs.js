/*
 * sift-r
 * v1.3.2
 * https://github.com/shuckster/sift-r
 * License: MIT
 */
var x=Object.create;var g=Object.defineProperty,E=Object.defineProperties,M=Object.getOwnPropertyDescriptor,T=Object.getOwnPropertyDescriptors,k=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,F=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable;var b=(t,n,s)=>n in t?g(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s,f=(t,n)=>{for(var s in n||(n={}))p.call(n,s)&&b(t,s,n[s]);if(d)for(var s of d(n))q.call(n,s)&&b(t,s,n[s]);return t},u=(t,n)=>E(t,T(n));var z=(t,n)=>{for(var s in n)g(t,s,{get:n[s],enumerable:!0})},B=(t,n,s,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of k(n))!p.call(t,r)&&r!==s&&g(t,r,{get:()=>n[r],enumerable:!(e=M(n,r))||e.enumerable});return t};var C=(t,n,s)=>(s=t!=null?x(F(t)):{},B(n||!t||!t.__esModule?g(s,"default",{value:t,enumerable:!0}):s,t)),D=t=>B(g({},"__esModule",{value:!0}),t);var $={};z($,{byPattern:()=>R,sift:()=>Q});module.exports=D($);var h=C(require("match-iz"),1);const{match:l,against:m,when:a,otherwise:y}=h,{not:G,allOf:O,firstOf:H,every:S,gte:I}=h,{isArray:c,isPojo:A,isFunction:J,isString:L}=h,v=O(c,S(c),S({length:2})),N=O(A,t=>v(Object.values(t)));function Q(t,...n){return l([t,...n])(a([N])(Y),a([A,A])(P),a([A,J])(Z),a([A,c])(_),a([v])(U),a([c,c])(j),a([c,G(c)])(W),a(O(H(c),{length:I(2)}))(X),a([A])(([s])=>[{},s]),a([c])(([s])=>[[],s]),y(([s])=>[void 0,s]))}const R=t=>m(a(t,n=>n),y(void 0)),j=([t,n])=>t.reduce(([s,e],r,o)=>l(r)(a(n[o])(i=>[[...s,i],e]),y(()=>[s,[...e,r]])),[[],[]]),U=([t])=>j(t.reduce(([n,s],[e,r])=>[[...n,r],[...s,e]],[[],[]])),W=([t,n])=>j([t,Array.from({length:t.length}).fill(n)]),X=([t,...n])=>{const s=Array.from({length:n.length}).map(()=>[]),e=[];return t.forEach(m(...n.map((o,i)=>a(o)(r(s[i]))),y(r(e)))),[...s,e];function r(o){return i=>o.push(i)}},P=([t,n])=>Object.entries(t).reduce(([s,e],[r,o])=>l(o)(a(n[r])(()=>[u(f({},s),{[r]:o}),e]),y(()=>[s,u(f({},e),{[r]:o})])),[{},{}]),Y=([t])=>P(Object.entries(t).reduce(([n,s],[e,[r,o]])=>[u(f({},n),{[e]:o}),u(f({},s),{[e]:r})],[{},{}])),Z=([t,n])=>P([t,Object.keys(t).reduce((s,e)=>u(f({},s),{[e]:n}),{})]),_=([t,n])=>{const s=Array.from({length:n.length}).map(()=>({})),e={};return Object.entries(t).forEach(m(...n.map((o,i)=>a([L,o])(r(s[i]))),y(r(e)))),[...s,e];function r(o){return([i,w])=>Object.assign(o,{[i]:w})}};0&&(module.exports={byPattern,sift});
